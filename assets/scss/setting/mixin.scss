/**
* Font-size mixin
*
* Send in two values for font-size and line-height  and get font-size and line-height in rems and pixels.
* Pixels is for fallback. Also works with two divided values (i.e. 18/16)
*
* Example: @include font-size(18/16, 24/16);
* @include font-size(2, 2.2);
*/

$base-fontsize: 1.6 !default;
$base-lineheight: 1.5 !default;

@mixin font-size($size: $base-font, $line: $size * $base-lineheight){
    font-size:   ceil($size * $font-base) + px;
    line-height: ceil($line * $font-base) + px;
    font-size:   $size + rem;
    line-height: $line + rem;
}

/**
* Prefix-mixin
* 
* Send in property, value and the prefixes you want to support
*
* Example: @include prefixer(border-radius, $radii, webkit ms spec);
*
*/

$prefix-for-webkit:    true !default;
$prefix-for-mozilla:   true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera:     true !default;
$prefix-for-spec:      true !default; // required for keyframe mixin

@mixin prefixer ($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      @if $prefix-for-webkit {
        -webkit-#{$property}: $value;
      }
    }
    @else if $prefix == moz {
      @if $prefix-for-mozilla {
        -moz-#{$property}: $value;
      }
    }
    @else if $prefix == ms {
      @if $prefix-for-microsoft {
        -ms-#{$property}: $value;
      }
    }
    @else if $prefix == o {
      @if $prefix-for-opera {
        -o-#{$property}: $value;
      }
    }
    @else if $prefix == spec {
      @if $prefix-for-spec {
        #{$property}: $value;
      }
    }
    @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}